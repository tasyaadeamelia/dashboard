# -*- coding: utf-8 -*-
"""dashboard

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Vb7lzOh7-0mfQuWpkhlJxEEPV6iIIa7m
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px
from babel.numbers import format_currency
sns.set(style='dark')

# Membaca data dari file CSV
all_df = pd.read_csv('all_data.csv')

st.header('Bike Sharing Dashboard Tasya:sparkles:')

# Menampilkan data dalam bentuk tabel
st.subheader('Dataset')
st.write(all_df)

# Mengganti data frame dengan data frame yang sesuai
monthly_counts = all_df.groupby(by=["mnth_x","yr_x"]).agg({
    "cnt_y": "sum"
}).reset_index()

# Membuat plot menggunakan seaborn
plt.figure(figsize=(10, 6))
sns.lineplot(data=monthly_counts, x="mnth_x", y="cnt_y", hue="yr_x", palette="viridis", marker="o")

# Menambahkan judul dan label sumbu
plt.ylabel("Jumlah")
plt.title("Jumlah total sepeda yang disewakan berdasarkan Bulan dan tahun")
plt.legend(title="Tahun", loc="upper right")

# Menetapkan label sumbu x menggunakan nilai bulan
plt.xticks(ticks=monthly_counts["mnth_x"], labels=monthly_counts["mnth_x"])

# Menampilkan plot menggunakan Streamlit
st.pyplot(plt)

# Mengganti data frame dengan DataFrame yang sesuai (contoh: bike_hour_df)
hourly_counts = all_df.groupby(by=["hr","yr_y"]).agg({
    "cnt_y": "sum"
}).reset_index()

# Membuat plot menggunakan seaborn
plt.figure(figsize=(10, 6))
sns.lineplot(data=hourly_counts, x="hr", y="cnt_y", hue="yr_y", palette="viridis", marker="o")

# Menambahkan judul dan label sumbu
plt.ylabel("Jumlah")
plt.title("Jumlah total sepeda yang disewakan berdasarkan Jam dan tahun")
plt.legend(title="Tahun", loc="upper right")

# Menetapkan label sumbu x menggunakan nilai jam
plt.xticks(ticks=hourly_counts["hr"], labels=hourly_counts["hr"])

# Menampilkan plot menggunakan Streamlit
st.pyplot(plt)

# Mengganti data frame dengan DataFrame yang sesuai (contoh: bike_day_df)
holiday_counts = all_df.groupby(by=["holiday_x","yr_x"]).agg({
    "cnt_y": "sum"
}).reset_index()

# Membuat plot menggunakan seaborn
sns.barplot(data=holiday_counts, x="holiday_x", y="cnt_y", hue="yr_x", palette="viridis")

# Menambahkan judul dan label sumbu
plt.ylabel("Jumlah")
plt.title("Jumlah total sepeda yang disewakan berdasarkan hari libur")
plt.legend(title="Tahun", loc="upper right")

# Menampilkan plot menggunakan Streamlit
st.pyplot(plt)

# Mengganti data frame dengan DataFrame yang sesuai (contoh: bike_day_df)
working_counts = all_df.groupby(by=["workingday_x","yr_y"]).agg({
    "cnt_y": "sum"
}).reset_index()

# Membuat plot menggunakan seaborn
sns.barplot(data=working_counts, x="workingday_x", y="cnt_y", hue="yr_y", palette="viridis")

# Menambahkan judul dan label sumbu
plt.ylabel("Jumlah")
plt.title("Jumlah total sepeda yang disewakan berdasarkan hari kerja")
plt.legend(title="Tahun", loc="upper right")

# Menampilkan plot menggunakan Streamlit
st.pyplot(plt)